function sma = stateMatrix()
global BpodSystem
global TaskParameters
%% Define ports
LeftPort = floor(mod(TaskParameters.GUI.Ports_LMR/100,10));
CenterPort = floor(mod(TaskParameters.GUI.Ports_LMR/10,10));
RightPort = mod(TaskParameters.GUI.Ports_LMR,10);
ValveTimes  = GetValveTimes(TaskParameters.GUI.rewardAmount, [LeftPort RightPort]);
LeftPortOut = strcat('Port',num2str(LeftPort),'Out');
CenterPortOut = strcat('Port',num2str(CenterPort),'Out');
RightPortOut = strcat('Port',num2str(RightPort),'Out');
LeftPortIn = strcat('Port',num2str(LeftPort),'In');
CenterPortIn = strcat('Port',num2str(CenterPort),'In');
RightPortIn = strcat('Port',num2str(RightPort),'In');

LeftValve = 2^(LeftPort-1);
RightValve = 2^(RightPort-1);

LeftValveTime  = GetValveTimes(TaskParameters.GUI.rewardAmount, LeftPort);
RightValveTime  = GetValveTimes(TaskParameters.GUI.rewardAmount, RightPort);

if BpodSystem.Data.Custom.Baited.Left(end)
    LeftPokeAction = 'rewarded_Lin';
else
    LeftPokeAction = 'unrewarded_Lin';
end
if BpodSystem.Data.Custom.Baited.Right(end)
    RightPokeAction = 'rewarded_Rin';
else
    RightPokeAction = 'unrewarded_Rin';
end
iti_timer = TaskParameters.GUI.ITI;
if TaskParameters.GUI.VI
    iti_timer = exprnd(iti_timer);
end
%%
sma = NewStateMatrix();
sma = SetGlobalTimer(sma,1,TaskParameters.GUI.FictDelay);
sma = SetGlobalTimer(sma,2,iti_timer);
sma = AddState(sma, 'Name', 'state_0',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup', 'wait_Cin'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'wait_Cin',...
    'Timer', 0,...
    'StateChangeConditions', {CenterPortIn, 'Cin'},...
    'OutputActions', {strcat('PWM',num2str(CenterPort)),255});
sma = AddState(sma, 'Name', 'Cin',...
    'Timer', TaskParameters.GUI.CenterDelay,...
    'StateChangeConditions', {CenterPortOut, 'EarlyCout','Tup','stillSampling'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'stillSampling',...
    'Timer', 0,...
    'StateChangeConditions', {CenterPortOut, 'wait_Sin'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'wait_Sin',...
    'Timer',TaskParameters.GUI.ChoiceDeadline,...
    'StateChangeConditions', {LeftPortIn,'start_Lin',RightPortIn,'start_Rin','Tup','ITI'},...
    'OutputActions',{strcat('PWM',num2str(LeftPort)),255,strcat('PWM',num2str(RightPort)),255});
sma = AddState(sma,'Name', 'start_Lin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Lin'},...
    'OutputActions',{'GlobalTimerTrig',1});
sma = AddState(sma,'Name', 'start_Rin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Rin'},...
    'OutputActions',{'GlobalTimerTrig',1});
switch LeftPokeAction
    case 'rewarded_Lin'
        sma = AddState(sma, 'Name', 'Lin',...
            'Timer', TaskParameters.GUI.FictDelay,...
            'StateChangeConditions', {LeftPortOut, 'Lin_grace','GlobalTimer1_End','rewarded_Lin_fict','Tup','rewarded_Lin_fict'},...
            'OutputActions', {strcat('PWM',num2str(LeftPort)),255});
    case 'unrewarded_Lin'
        sma = AddState(sma, 'Name', 'Lin',...
            'Timer', TaskParameters.GUI.FictDelay,...
            'StateChangeConditions', {LeftPortOut, 'Lin_grace','GlobalTimer1_End','unrewarded_fict','Tup','unrewarded_fict'},...
            'OutputActions', {strcat('PWM',num2str(LeftPort)),255});
end
switch RightPokeAction
    case 'rewarded_Rin'
        sma = AddState(sma, 'Name', 'Rin',...
            'Timer', TaskParameters.GUI.FictDelay,...
            'StateChangeConditions', {RightPortOut,'Rin_grace','GlobalTimer1_End','rewarded_Rin_fict','Tup','rewarded_Rin_fict'},...
            'OutputActions', {strcat('PWM',num2str(RightPort)),255});
    case 'unrewarded_Rin'
        sma = AddState(sma, 'Name', 'Rin',...
            'Timer', TaskParameters.GUI.FictDelay,...
            'StateChangeConditions', {RightPortOut,'Rin_grace','GlobalTimer1_End','unrewarded_fict','Tup','unrewarded_fict'},...
            'OutputActions', {strcat('PWM',num2str(RightPort)),255});
end
sma = AddState(sma, 'Name', 'Lin_grace',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {LeftPortIn,'Lin','Tup', 'EarlySout','GlobalTimer1_End','unrewarded_fict'},...
    'OutputActions', {strcat('PWM',num2str(LeftPort)),255});
sma = AddState(sma, 'Name', 'Rin_grace',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {RightPortIn,'Rin','Tup', 'EarlySout','GlobalTimer1_End','unrewarded_fict'},...
    'OutputActions', {strcat('PWM',num2str(RightPort)),255});
sma = AddState(sma, 'Name', 'rewarded_Lin_fict',...
    'Timer', TaskParameters.GUI.RewardDelay,...
    'StateChangeConditions', {'Tup','water_L'},...
    'OutputActions', {'BNCState',TaskParameters.GUI.FictBNCout});
sma = AddState(sma, 'Name', 'rewarded_Rin_fict',...
    'Timer', TaskParameters.GUI.RewardDelay,...
    'StateChangeConditions', {'Tup','water_R'},...
    'OutputActions', {'BNCState',TaskParameters.GUI.FictBNCout});
sma = AddState(sma, 'Name', 'water_L',...
    'Timer', LeftValveTime,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', {'ValveState', LeftValve});
sma = AddState(sma, 'Name', 'water_R',...
    'Timer', RightValveTime,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', {'ValveState', RightValve});

smaTimer = 0;
smaChange = {'Tup','ITI'};
smaOut = {'BNCState',TaskParameters.GUI.FictBNCout};
if TaskParameters.GUI.AllowSecondChance
    if strcmp(LeftPokeAction,'rewarded_Lin')
        smaTimer = iti_timer*.95;
        smaChange = {smaChange{:},LeftPortIn,'scnd_chance_L'};
        
        sma = AddState(sma, 'Name', 'scnd_chance_L',...
            'Timer', 0,...
            'StateChangeConditions', {'Tup','scnd_chance_water_L'},...
            'OutputActions', {'BNCState',TaskParameters.GUI.FictBNCout});
        sma = AddState(sma, 'Name', 'scnd_chance_water_L',...
            'Timer', LeftValveTime,...
            'StateChangeConditions', {'Tup','ITI'},...
            'OutputActions', {'ValveState', LeftValve});
    end
    if strcmp(RightPokeAction,'rewarded_Rin')
        smaTimer = iti_timer*.95;
        smaChange = {smaChange{:},RightPortIn,'scnd_chance_R'};
        
        sma = AddState(sma, 'Name', 'scnd_chance_R',...
            'Timer', 0,...
            'StateChangeConditions', {'Tup','scnd_chance_water_R'},...
            'OutputActions', {'BNCState',TaskParameters.GUI.FictBNCout});
        sma = AddState(sma, 'Name', 'scnd_chance_water_R',...
            'Timer', RightValveTime,...
            'StateChangeConditions', {'Tup','ITI'},...
            'OutputActions', {'ValveState', RightValve});       
    end
    smaOut = {smaOut{:},'GlobalTimerTrig',2};
end
sma = AddState(sma, 'Name', 'unrewarded_fict',...
    'Timer', smaTimer,...
    'StateChangeConditions', smaChange,...
    'OutputActions', smaOut);

sma = AddState(sma, 'Name', 'EarlyCout',...
    'Timer', TaskParameters.GUI.EarlyCoutPenalty,...
    'StateChangeConditions', {'Tup','exit'},...
    'OutputActions', {'SoftCode',1});
sma = AddState(sma, 'Name', 'EarlySout',...
    'Timer', TaskParameters.GUI.FictDelay,...
    'StateChangeConditions', {'GlobalTimer1_End','unrewarded_fict','Tup','should_never_visited'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'should_never_visited',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', {});

smaChange = {'Tup','exit'};
if TaskParameters.GUI.AllowSecondChance
    smaChange = {smaChange{:},'GlobalTimer2_End','exit'};
end
sma = AddState(sma, 'Name', 'ITI',...
    'smaTimer',iti_timer,...
    'StateChangeConditions',smaChange,...
    'OutputActions',{});
end
